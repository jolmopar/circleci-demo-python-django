version: 2.1

orbs:
  python: circleci/python@1.5.0
  heroku: circleci/heroku@1.2.6
  
jobs:
  build_and_test:
    docker:
      - image: cimg/python:3.10.1
    resource_class: small
    parallelism: 3
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pipenv
      - run:
          name: Run tests
          command: |
            # get test files while ignoring __init__ files
            TESTFILES=$(circleci tests glob "catalog/tests/*.py" | sed 's/\S\+__init__.py//g')
            echo $TESTFILES | tr ' ' '\n' | sort | uniq > circleci_test_files.txt
            cat circleci_test_files.txt
            TESTFILES=$(circleci tests split --split-by=timings circleci_test_files.txt)
            # massage filepaths into format manage.py test accepts
            TESTFILES=$(echo $TESTFILES | tr "/" "." | sed 's/\.py$//g')
            echo $TESTFILES
            pipenv run python manage.py test --verbosity=2 $TESTFILES
      - store_test_results:
          path: test-results
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  deploy: # this can be any name you choose
    docker:
      - image: cimg/python:3.10.1
    resource_class: small
    steps:
      - attach_workspace:
          at: ~/project
      - heroku/deploy-via-git:
          force: true # force push when pushing to the heroku remote, see: https://devcenter.heroku.com/articles/git
workflows:
  build_test_deploy:
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test # only deploy if the build_and_test job has completed
          filters:
            branches:
              only: main # only deploy when on main  
